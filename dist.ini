name = CPAN-Meta
author = David Golden <dagolden@cpan.org>
author = Ricardo Signes <rjbs@cpan.org>
author = Adam Kennedy <adamk@cpan.org>
license = Perl_5
copyright_holder = David Golden, Ricardo Signes, Adam Kennedy and Contributors
copyright_year = 2010

[Encoding]
encoding = bytes
match = ^t/data-

[Encoding / Corpus]
encoding = Latin-1
filename = corpus/BadMETA.yml

[RewriteVersion]

[Git::Contributors]

[Git::GatherDir]
exclude_filename = README.mkdn
exclude_filename = cpanfile
exclude_filename = Makefile.PL

[PruneCruft]

[ManifestSkip]

[InsertCopyright]

[SurgicalPodWeaver]
:version = 0.0021
config_plugin = @DAGOLDEN
post_code_replacer = replace_with_nothing
replacer = replace_with_comment

[Pod2Readme]

[License]

[Test::Compile]
fake_home = 1
xt_mode = 1

[Test::ReportPrereqs]

[Test::PodSpelling]
stopwords = LoadFile
stopwords = apache
stopwords = bsd
stopwords = deserialization
stopwords = deserialize
stopwords = deserializes
stopwords = deserializing
stopwords = die'ing
stopwords = dir
stopwords = distmeta
stopwords = dists
stopwords = gpl
stopwords = json
stopwords = lgpl
stopwords = mailto
stopwords = metacpan
stopwords = metafiles
stopwords = mit
stopwords = mozilla
stopwords = releaser
stopwords = serializer
stopwords = subkey
stopwords = subkeys

[Test::Perl::Critic]

[MetaTests]

[PodSyntaxTests]

[PodCoverageTests]

[Test::Portability]
options = test_one_dot = 0

[Test::Version]

[Authority]
authority = cpan:DAGOLDEN
do_munging = 0

[MinimumPerl]

[AutoPrereqs]
skip = ^t::lib

[MetaNoIndex]
directory = t
directory = xt
directory = examples
directory = corpus
directory = history
package = DB

[MetaProvides::Package]
meta_noindex = 1

[GithubMeta]
issues = 1
remote = origin
remote = github
user = Perl-Toolchain-Gang

[Prereqs::AuthorDeps]

[MetaYAML]

[MetaJSON]

[CPANFile]

[ExecDir]

[ShareDir]

[MakeMaker]
default_jobs = 9
eumm_version = 6.17

[PromptIfStale]
check_all_plugins = 1
modules = Dist::Zilla
modules = Dist::Zilla::PluginBundle::DAGOLDEN

[CopyFilesFromBuild::Filtered]
copy = Makefile.PL

[Manifest]

[Git::CheckFor::CorrectBranch]

[Git::Check]
allow_dirty = Makefile.PL

[CheckMetaResources]

[CheckPrereqsIndexed]

[CheckChangesHasContent]

[RunExtraTests]
default_jobs = 9

[TestRelease]

[ConfirmRelease]

[UploadToCPAN]

[Git::Commit / Commit_Dirty_Files]
allow_dirty = Makefile.PL
commit_msg = Update Makefile.PL

[Git::Tag]
tag_format = %v

[NextRelease]

[BumpVersionAfterRelease]

[Git::Commit / Commit_Changes]
allow_dirty = Changes
allow_dirty = Makefile.PL
allow_dirty_match = ^lib
commit_msg = After release: bump $VERSION and timestamp Changes

[Git::Push]
push_to = origin

[Prereqs]
CPAN::Meta::YAML = 0.011
File::Spec = 0.80
JSON::PP = 2.27300
version = 0.88

[Prereqs / TestRequires]
Test::More = 0.47

[Prereqs / DevelopRecommends]
Perl::Critic::Policy::Lax::ProhibitStringyEval::ExceptForRequire = 0

[OnlyCorePrereqs]
; EU::MM bundled prereqs need this
:version = 0.014
check_dual_life_versions = 0

[MakeMaker::Highlander]
:version = 0.003

[DualLife]
entered_core=5.010001
